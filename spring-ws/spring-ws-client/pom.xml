<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.hurui</groupId>
	<artifactId>spring-ws-client</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-ws-client</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<maven-jaxb2-plugin.version>0.14.0</maven-jaxb2-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		
		<!-- Use this dependency for ws server setup -->
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web-services -->
		<!--<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>-->
		
		<!-- Use this dependency for client only setup -->
		<!-- https://mvnrepository.com/artifact/org.springframework.ws/spring-ws-core -->
		<dependency>
		    <groupId>org.springframework.ws</groupId>
		    <artifactId>spring-ws-core</artifactId>
		</dependency>		
		
		<!-- You need a custom httpClient for https -->
		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpclient</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		</dependency>
				
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>${maven-jaxb2-plugin.version}</version>
				<executions>
					<!-- repeat this section for other wsdl -->
					<execution>
						<!-- give this execution an unique ID -->
						<id>calculator-service</id>
						<goals>
							<!-- classes will be generated from the command mvn generate-sources or mvn clean compile -->
							<goal>generate</goal>
						</goals>
						<configuration>
							<!-- wsdl base path -->
							<schemaDirectory>${project.basedir}/src/main/resources/wsdl</schemaDirectory>
							<schemaIncludes>
								<!-- wsdl file -->
								<include>Calculator.wsdl</include>
							</schemaIncludes>
							<!-- package name -->
							<generatePackage>com.hurui.stub.calculatorservice</generatePackage>
							<!-- generated classes output directory 
							*Best Practice: do not generate in src/main -->
							<generateDirectory>${project.build.directory}/generated-sources/xjc</generateDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Add the generated source folder to classpath so that IDE can recognize the generated classes -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/xjc</source>
							</sources>
						</configuration>
					</execution> 
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
